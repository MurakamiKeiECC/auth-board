openapi: 3.0.0
info:
  title: Bulletin Board API
  description: A simple bulletin board API for managing users, posts, and comments.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
    url: https://example.com/support

servers:
  - url: http://localhost:3000/api/v1

paths:
  /users:
    get:
      summary: Get a list of users
      operationId: getUsers
      description: Retrieve a list of all users in the system.
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create a new user
      operationId: createUser
      description: Create a new user in the system.
      tags:
        - Users
      requestBody:
        description: User to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: The user was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get a user by ID
      operationId: getUser
      description: Retrieve a user by their unique ID.
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: integer
      responses:
        '200':
          description: The user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      summary: Update a user by ID
      operationId: updateUser
      description: Update the details of a user identified by their ID.
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: integer
      requestBody:
        description: User details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: The updated user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /posts:
    get:
      summary: Get a list of posts
      operationId: getPosts
      description: Retrieve a list of all posts.
      tags:
        - Posts
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

    post:
      summary: Create a new post
      operationId: createPost
      description: Create a new post in the system.
      tags:
        - Posts
      requestBody:
        description: Post to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        '201':
          description: The post was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

  /posts/{postId}:
    get:
      summary: Get a post by ID
      operationId: getPost
      description: Retrieve a post by its unique ID.
      tags:
        - Posts
      parameters:
        - name: postId
          in: path
          required: true
          description: The ID of the post
          schema:
            type: integer
      responses:
        '200':
          description: The post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

    put:
      summary: Update a post by ID
      operationId: updatePost
      description: Update the details of a post identified by its ID.
      tags:
        - Posts
      parameters:
        - name: postId
          in: path
          required: true
          description: The ID of the post
          schema:
            type: integer
      requestBody:
        description: Post details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        '200':
          description: The updated post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

    delete:
      summary: Delete a post by ID
      operationId: deletePost
      description: Delete a post by its unique ID.
      tags:
        - Posts
      parameters:
        - name: postId
          in: path
          required: true
          description: The ID of the post
          schema:
            type: integer
      responses:
        '204':
          description: The post was deleted

  /posts/{postId}/comments:
    get:
      summary: Get a list of comments for a post
      operationId: getPostComments
      description: Retrieve a list of comments for a specified post.
      tags:
        - Comments
      parameters:
        - name: postId
          in: path
          required: true
          description: The ID of the post
          schema:
            type: integer
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

    post:
      summary: Create a new comment on a post
      operationId: createComment
      description: Add a new comment to a post.
      tags:
        - Comments
      parameters:
        - name: postId
          in: path
          required: true
          description: The ID of the post
          schema:
            type: integer
      requestBody:
        description: Comment to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        '201':
          description: The comment was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /comments/{commentId}:
    get:
      summary: Get a comment by ID
      operationId: getComment
      description: Retrieve a comment by its unique ID.
      tags:
        - Comments
      parameters:
        - name: commentId
          in: path
          required: true
          description: The ID of the comment
          schema:
            type: integer
      responses:
        '200':
          description: The comment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

    delete:
      summary: Delete a comment by ID
      operationId: deleteComment
      description: Delete a comment by its unique ID.
      tags:
        - Comments
      parameters:
        - name: commentId
          in: path
          required: true
          description: The ID of the comment
          schema:
            type: integer
      responses:
        '204':
          description: The comment was deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    UserCreate:
      type: object
      properties:
        name:
          type: string
    UserUpdate:
      type: object
      properties:
        name:
          type: string
    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
    PostCreate:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    PostUpdate:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    Comment:
      type: object
      properties:
        id:
          type: integer
        postId:
          type: integer
        content:
          type: string
    CommentCreate:
      type: object
      properties:
        content:
          type: string
